version: 2

models:
  - name: stg_warehouse_metering
    description: "Windowed, incremental copy of ACCOUNT_USAGE.WAREHOUSE_METERING_HISTORY."
    tests:
      - unique:
          column_name: metering_id
    columns:
      - name: hour_start
        tests: [not_null]
      - name: hour_end
        tests: [not_null]
      - name: usage_date
        tests: [not_null]
      - name: warehouse_name
        tests: [not_null]
      - name: total_credits_used
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
      - name: total_cost_usd
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0

  - name: stg_query_history
    description: "Windowed, incremental copy of ACCOUNT_USAGE.QUERY_HISTORY (successful, compute-bearing only)."
    columns:
      - name: usage_date
        tests: [not_null]
      - name: query_id
        tests: [not_null, unique]
      - name: warehouse_name
        tests: [not_null]
      - name: gb_scanned
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
      - name: total_elapsed_seconds
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0

  - name: int_hourly_compute_costs
    description: "Hourly costs from WAREHOUSE_METERING_HISTORY (authoritative)."
    columns:
      - name: warehouse_name
        tests:
          - relationships:
              to: ref('stg_warehouse_metering')
              field: warehouse_name
      - name: cost_hour_key
        tests: [not_null, unique]
      - name: compute_cost_usd
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
      - name: idle_cost_usd
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0

  - name: fct_daily_costs
    description: "Daily compute & idle cost by warehouse. $$ from metering history; query-level $$ are estimates only."
    tests:
      - unique:
          column_name: daily_cost_key
    columns:
      - name: warehouse_name
        tests:
          - relationships:
              to: ref('stg_warehouse_metering')
              field: warehouse_name
      - name: compute_cost
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
      - name: idle_cost
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
  - name: cost_by_department
    description: "Daily compute/idle/total $ by department. $ from metering (authoritative)."
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns: [department, usage_date]
    columns:
      - name: department
        tests:
          - relationships:
              to: ref('department_mapping')
              field: department
      - name: total_cost_usd
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0

  - name: cost_trend
    description: "7/30-day rolling totals by department."
    columns:
      - name: total_cost_usd
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0

  - name: budget_vs_actual
    description: "Daily budgets vs actuals by department (optional; sample data)."
    columns:
      - name: variance_usd
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: -1000000000  # variance can be negative

seeds:
  - name: department_mapping
    description: "Maps Snowflake warehouse_name to a business department/team."
    columns:
      - name: warehouse_name
        tests: [not_null, unique]
      - name: department
        tests: [not_null]

  - name: budget_daily
    description: "Daily spend budget per department (optional; sample data)."
    columns:
      - name: department
        tests: [not_null]
      - name: date
        tests: [not_null]
      - name: budget_usd
        tests:
          - dbt_expectations.expect_column_values_to_be_between:
              arguments:
                min_value: 0
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns: [department, date]
